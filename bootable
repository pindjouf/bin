#!/usr/bin/env bash

## Make linux bootable USB's

# ANSI color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

main() {
  getInput() {
    mapfile -t images < <(find /home/$USER/ -type f -name "*.iso" 2>/dev/null)
    if [ ${#images[@]} -gt 0 ]; then
      echo -e "${BLUE}[Available OS images:]${NC}"
      for i in "${!images[@]}"; do
        filename=$(basename "${images[i]}")
        echo -e "${GREEN}$((i+1)). ${NC}$filename"
      done
      read -p "$(echo -e ${YELLOW}"Choose an OS image (enter the number): "${NC})" choice
      if [[ $choice =~ ^[0-9]+$ ]] && [ $choice -ge 1 ] && [ $choice -le ${#images[@]} ]; then
        selected_image="${images[$((choice-1))]}"
        echo -e "${GREEN}You chose: $(basename "$selected_image")${NC}"
        echo ""
        
        # Get USB drives
        mapfile -t usb_drives < <(lsblk -ndo NAME,SIZE,MODEL,TRAN,TYPE | grep "usb")
        if [ ${#usb_drives[@]} -gt 0 ]; then
          echo -e "${BLUE}[Available USB drives:]${NC}"
          for i in "${!usb_drives[@]}"; do
            echo -e "${GREEN}$((i+1)). ${NC}${usb_drives[i]}"
          done
          read -p "$(echo -e ${YELLOW}"Choose a USB drive (enter the number): "${NC})" choice2
          if [[ $choice2 =~ ^[0-9]+$ ]] && [ $choice2 -ge 1 ] && [ $choice2 -le ${#usb_drives[@]} ]; then
            selected_drive="/dev/$(echo "${usb_drives[$((choice2-1))]}" | awk '{print $1}')"
            echo -e "${GREEN}You chose: $selected_drive${NC}"
            echo ""
            
            # Confirm before proceeding
            read -p "$(echo -e ${RED}"This will erase all data on $selected_drive. Are you sure? (y/N) "${NC})" confirm
            if [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]]; then
              echo -e "${YELLOW}Creating bootable USB...${NC}"
              sudo dd if="$selected_image" of="$selected_drive" status=progress
              echo -e "${GREEN}Bootable USB created successfully!${NC}"
              echo ""

              # Eject the USB drive
              read -p "$(echo -e ${BLUE}"You should now eject $selected_drive. Do you wish to proceed? (y/N) "${NC})" confirm2
              if [[ $confirm2 == [yY] || $confirm2 == [yY][eE][sS] ]]; then
                echo -e "${YELLOW}Ejecting $selected_drive...${NC}"
                sudo eject $selected_drive
                echo -e "${GREEN}You can now safely remove $selected_drive.${NC}"
              else
                echo -e "${RED}Operation cancelled.${NC}"
              fi
            else
              echo -e "${RED}Operation cancelled.${NC}"
            fi
          else
            echo -e "${RED}Invalid choice.${NC}"
          fi
        else
          echo -e "${RED}No USB drives found.${NC}"
        fi
      else
        echo -e "${RED}Invalid choice.${NC}"
      fi
    else
      echo -e "${RED}No .iso images were found.${NC}"
    fi
  }
  getInput
}

main
